{"componentChunkName":"component---src-templates-blog-post-js","path":"/스프링 부트(Spring Boot)+리액트(React) 함께 빌드하기","result":{"data":{"site":{"siteMetadata":{"title":"Gunlog","author":"Gun Kim","siteUrl":"https://gunlog.dev","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"bb0628cf-9acc-5a56-94ff-c5a9e7536f28","excerpt":"항상 스프링 부트+리액트 개발할 때 스프링 부트 서버(8080) 실행하고, 리액트 서버(3000)을 실행해서 프록시 설정을 통해 통신을 했었는데, 항상 두번씩 실행해야 해서 번거롭기도 해서 한번에 빌드하는 방법을 정리해보려고 한다. 예제 프로젝트 개발 환경 Java 1.8 Spring Boot 2.2.4 NodeJs 14.2.0 React 16.13.1 사전 준비 해당 이미지와 같이 스프링 부트 프로젝트를 생성하고 root 디렉토리에 frontend폴더를 만들어서 my-app…","html":"<p>항상 스프링 부트+리액트 개발할 때 스프링 부트 서버(8080) 실행하고, 리액트 서버(3000)을 실행해서 프록시 설정을 통해 통신을 했었는데, 항상 두번씩 실행해야 해서 번거롭기도 해서 한번에 빌드하는 방법을 정리해보려고 한다. <a href=\"https://github.com/gunkim0318/springboot-react-example\">예제 프로젝트</a></p>\n<h1 id=\"개발-환경\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD\" aria-label=\"개발 환경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발 환경</h1>\n<blockquote>\n<p>Java 1.8<br>\nSpring Boot 2.2.4<br>\nNodeJs 14.2.0<br>\nReact 16.13.1</p>\n</blockquote>\n<h1 id=\"사전-준비\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%A0%84-%EC%A4%80%EB%B9%84\" aria-label=\"사전 준비 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사전 준비</h1>\n<p>해당 이미지와 같이 스프링 부트 프로젝트를 생성하고 root 디렉토리에 frontend폴더를 만들어서 my-app이라는 이름의 리액트 프로젝트를 생성해주자.</p>\n<p><img src=\"https://user-images.githubusercontent.com/45007556/91056894-7d805500-e661-11ea-994d-e8a0f3cb16b9.png\" alt=\"image\"></p>\n<h1 id=\"그래들gradle-buildgradle-수정해주기\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9E%98%EB%93%A4gradle-buildgradle-%EC%88%98%EC%A0%95%ED%95%B4%EC%A3%BC%EA%B8%B0\" aria-label=\"그래들gradle buildgradle 수정해주기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그래들(Gradle) build.gradle 수정해주기</h1>\n<h2 id=\"전체-스크립트\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8\" aria-label=\"전체 스크립트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 스크립트</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">buildscript <span class=\"token punctuation\">{</span>\n    ext <span class=\"token punctuation\">{</span>\n        springBootVersion <span class=\"token operator\">=</span> <span class=\"token string\">'2.2.4.RELEASE'</span>\n        dependencyManagementVersion <span class=\"token operator\">=</span> <span class=\"token string\">'1.0.10.RELEASE'</span>\n        mooworkNodeVersion <span class=\"token operator\">=</span> <span class=\"token string\">\"1.3.1\"</span>\n    <span class=\"token punctuation\">}</span>\n    repositories <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">mavenCentral</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    dependencies <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">classpath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nplugins <span class=\"token punctuation\">{</span>\n    id <span class=\"token string\">\"com.moowork.node\"</span> version <span class=\"token string\">\"${mooworkNodeVersion}\"</span>\n    id <span class=\"token string\">\"java\"</span>\n    id <span class=\"token string\">\"org.springframework.boot\"</span> version <span class=\"token string\">\"${springBootVersion}\"</span>\n    id <span class=\"token string\">\"io.spring.dependency-management\"</span> version <span class=\"token string\">\"${dependencyManagementVersion}\"</span>\n<span class=\"token punctuation\">}</span>\ngroup <span class=\"token operator\">=</span> <span class=\"token string\">'com.gun'</span>\nversion <span class=\"token operator\">=</span> <span class=\"token string\">'0.0.1'</span>\nsourceCompatibility <span class=\"token operator\">=</span> <span class=\"token string\">'1.8'</span>\n\nrepositories <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">mavenCentral</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\ndependencies <span class=\"token punctuation\">{</span>\n    testImplementation group<span class=\"token operator\">:</span> <span class=\"token string\">'org.springframework.boot'</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'spring-boot-starter-test'</span>\n    implementation group<span class=\"token operator\">:</span> <span class=\"token string\">'org.springframework.boot'</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'spring-boot-starter-web'</span>\n<span class=\"token punctuation\">}</span>\n\ntest <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">useJUnitPlatform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//리액트 프로젝트 경로</span>\n<span class=\"token comment\">//$projectDir은 스프링 부트 root 경로</span>\ndef webappDir <span class=\"token operator\">=</span> <span class=\"token string\">\"$projectDir/frontend/my-app\"</span>\n\ntask <span class=\"token function\">appNpmInstall</span><span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> <span class=\"token class-name\">NpmTask</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    workingDir <span class=\"token operator\">=</span> <span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${webappDir}\"</span><span class=\"token punctuation\">)</span>\n    args <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"run\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\ntask <span class=\"token function\">copyWebApp</span><span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> <span class=\"token class-name\">Copy</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    from <span class=\"token string\">'frontend/my-app/build'</span>\n    into <span class=\"token string\">\"build/resources/main/static\"</span>\n<span class=\"token punctuation\">}</span>\ncopyWebApp<span class=\"token punctuation\">.</span><span class=\"token function\">dependsOn</span><span class=\"token punctuation\">(</span>appNpmInstall<span class=\"token punctuation\">)</span>\ncompileJava<span class=\"token punctuation\">.</span><span class=\"token function\">dependsOn</span><span class=\"token punctuation\">(</span>copyWebApp<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"주요-스크립트\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9A%94-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8\" aria-label=\"주요 스크립트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주요 스크립트</h2>\n<p>gradle에서 Node 빌드를 하기 위한 플러그인 “com.moowork.node”을 추가해주었다.</p>\n<p>그리고 gradle 빌드 시 리액트 프로젝트 경로에서 “npm run bulid” 명령어가 실행되어 리액트 프로젝트가 빌드되도록 하고, 해당 빌드된 내용을 gradle빌드 된 스프링 부트 정적 콘텐츠 영역에 포함시켰다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">plugins <span class=\"token punctuation\">{</span>\n    id <span class=\"token string\">\"com.moowork.node\"</span> version <span class=\"token string\">\"${mooworkNodeVersion}\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//리액트 프로젝트 경로</span>\n<span class=\"token comment\">//$projectDir은 스프링 부트 root 경로</span>\ndef webappDir <span class=\"token operator\">=</span> <span class=\"token string\">\"$projectDir/frontend/my-app\"</span>\n\ntask <span class=\"token function\">appNpmInstall</span><span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> <span class=\"token class-name\">NpmTask</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    workingDir <span class=\"token operator\">=</span> <span class=\"token function\">file</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${webappDir}\"</span><span class=\"token punctuation\">)</span>\n    args <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"run\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\ntask <span class=\"token function\">copyWebApp</span><span class=\"token punctuation\">(</span>type<span class=\"token operator\">:</span> <span class=\"token class-name\">Copy</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    from <span class=\"token string\">'frontend/my-app/build'</span>\n    into <span class=\"token string\">\"build/resources/main/static\"</span>\n<span class=\"token punctuation\">}</span>\ncopyWebApp<span class=\"token punctuation\">.</span><span class=\"token function\">dependsOn</span><span class=\"token punctuation\">(</span>appNpmInstall<span class=\"token punctuation\">)</span>\ncompileJava<span class=\"token punctuation\">.</span><span class=\"token function\">dependsOn</span><span class=\"token punctuation\">(</span>copyWebApp<span class=\"token punctuation\">)</span></code></pre></div>\n<h1 id=\"그래들gradle-빌드\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9E%98%EB%93%A4gradle-%EB%B9%8C%EB%93%9C\" aria-label=\"그래들gradle 빌드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그래들(Gradle) 빌드</h1>\n<p>스프링 부트 루트 경로에서 아래 명령어를 실행해주게 되면 그래들 빌드가 되게 된다.</p>\n<blockquote>\n<p>gradle clean build</p>\n</blockquote>\n<p>빌드된 내용을 보면 appNpmInstall이 실행되면서 리액트 프로젝트가 빌드되는 것을 확인할 수 있다.</p>\n<p>BUILD SUCCESSFUL 메시지가 확인되면 성공이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PS C:\\Users\\gunkim\\workspace\\java\\springboot-react-example&gt; gradle clean build\n\n&gt; Task :appNpmInstall\n\n&gt; my-app@0.1.0 build C:\\Users\\gunkim\\workspace\\java\\springboot-react-example\\frontend\\my-app\n&gt; react-scripts build\n\nCreating an optimized production build...\nCompiled successfully.\n\nFile sizes after gzip:\n\n  46.61 KB  build\\static\\js\\2.298dc5ad.chunk.js\n  772 B     build\\static\\js\\runtime-main.83c3e0c4.js\n  706 B     build\\static\\js\\main.63a4bfce.chunk.js\n\nThe project was built assuming it is hosted at /.\nYou can control this with the homepage field in your package.json.\n\nThe build folder is ready to be deployed.\nYou may serve it with a static server:\n\n  yarn global add serve\n  serve -s build\n\nFind out more about deployment here:\n\n  bit.ly/CRA-deploy\n\n\n&gt; Task :test\n2020-08-19 01:11:55.968  INFO 6600 --- [extShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService &#39;applicationTaskExecutor&#39;\n\nBUILD SUCCESSFUL in 10s\n8 actionable tasks: 8 executed</code></pre></div>\n<h1 id=\"빌드-파일-실행\" style=\"position:relative;\"><a href=\"#%EB%B9%8C%EB%93%9C-%ED%8C%8C%EC%9D%BC-%EC%8B%A4%ED%96%89\" aria-label=\"빌드 파일 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빌드 파일 실행</h1>\n<p>빌드가 되면 스프링 부트 root디렉토리 build폴더와 함께 libs안에 빌드된 jar파일이 있는데 이것을 실행해주면 된다. 해당 경로로 이동해서 아래 명령어 실행</p>\n<blockquote>\n<p>java -jar springboot-react-example-0.0.1.jar</p>\n</blockquote>\n<p><img src=\"https://user-images.githubusercontent.com/45007556/91056971-938e1580-e661-11ea-92fd-35fc69ad0607.png\" alt=\"image\"></p>\n<h1 id=\"확인\" style=\"position:relative;\"><a href=\"#%ED%99%95%EC%9D%B8\" aria-label=\"확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>확인</h1>\n<p>아래 경로에 접속하게 되면 아래와 같이 제대로 연동된 것을 확인할 수 있다.</p>\n<blockquote>\n<p>localhost:8080</p>\n</blockquote>\n<p><img src=\"https://user-images.githubusercontent.com/45007556/91056985-9ab52380-e661-11ea-8727-6ce068f6362a.png\" alt=\"image\"></p>\n<h1 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h1>\n<p><a href=\"https://blog.indrek.io/articles/serving-react-apps-from-spring-boot/\">https://blog.indrek.io/articles/serving-react-apps-from-spring-boot/</a></p>","frontmatter":{"title":"스프링 부트(Spring Boot)+리액트(React) 함께 빌드하기","date":"August 19, 2020"}}},"pageContext":{"slug":"/2020/2020-08-19-Spring Boot-React/","previous":{"fields":{"slug":"/2020/2020-08-09-Spring Boot-Spring Security-jwt/"},"frontmatter":{"title":"스프링 부트(Spring Boot) + 스프링 시큐리티(Spring Security) + JWT(Json Web Token) 연동하기","category":"Spring","draft":false}},"next":{"fields":{"slug":"/2020/2020-08-28-일일커밋 시작하기/"},"frontmatter":{"title":"일일커밋 시작하기","category":"Think","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}