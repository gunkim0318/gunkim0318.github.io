{"componentChunkName":"component---src-templates-blog-post-js","path":"/스프링 시큐리티 정리","result":{"data":{"site":{"siteMetadata":{"title":"Gunlog","author":"Gun Kim","siteUrl":"https://gunlog.dev","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"87db3e40-d7e5-5372-8195-783fbe3242fe","excerpt":"그 동안 스프링 시큐리티를 잘 알지 못하고 사용했었는데, 스프링 시큐리티에 대한 이해도를 높일 겸 정리해보려고 한다. 스프링 시큐리티(Spring Security)란? image\n스프링 기반의 어플리케이션의 보안(인증과 권한, 인가 등)을 담당하는 스프링 하위 프레임워크이다. 용어 정리 접근 주체(Principal): 보호된 리소스에 접근하는 대상 인증(Authentication…","html":"<p>그 동안 스프링 시큐리티를 잘 알지 못하고 사용했었는데, 스프링 시큐리티에 대한 이해도를 높일 겸 정리해보려고 한다.</p>\n<h1 id=\"스프링-시큐리티spring-security란\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0spring-security%EB%9E%80\" aria-label=\"스프링 시큐리티spring security란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 시큐리티(Spring Security)란?</h1>\n<p><img src=\"https://user-images.githubusercontent.com/45007556/91024296-b6550580-e632-11ea-874f-8618094b21e5.png\" alt=\"image\">\n스프링 기반의 어플리케이션의 보안(인증과 권한, 인가 등)을 담당하는 스프링 하위 프레임워크이다.</p>\n<h1 id=\"용어-정리\" style=\"position:relative;\"><a href=\"#%EC%9A%A9%EC%96%B4-%EC%A0%95%EB%A6%AC\" aria-label=\"용어 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용어 정리</h1>\n<ul>\n<li><strong>접근 주체(Principal)</strong>: 보호된 리소스에 접근하는 대상</li>\n<li><strong>인증(Authentication)</strong>: 보호된 리소스에 접근한 대상에 대해 이 유저가 누구인지, 애플리케이션의 작업을 수행해도 되는 주체인지 확인하는 과정</li>\n<li><strong>인가(Authorize)</strong>: 해당 리소스에 대해 접근 가능한 권한을 가지고 있는지 확인하는 과정</li>\n<li><strong>권한</strong>: 인가 과정에서 해당 리소스에 대한 제한된 최소한의 권한을 가졌는지 확인한다.</li>\n</ul>\n<h1 id=\"주요-특징\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9A%94-%ED%8A%B9%EC%A7%95\" aria-label=\"주요 특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주요 특징</h1>\n<p>스프링 시큐리티 <a href=\"https://docs.spring.io/spring-security/site/docs/5.4.0-RC1/reference/html5/#features\">레퍼런스 문서</a>에 나와 있는 특징 중 중요해보이는 것만 정리해보았음.</p>\n<h2 id=\"입증\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%A6%9D\" aria-label=\"입증 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입증</h2>\n<p>Spring Security는 인증에 대한 포괄적인 지원을 제공한다.\n사용자를 인증하는 일반적인 방법은 사용자에게 사용자 이름과 비밀번호를 입력하는 Credential방식을 사용한다.</p>\n<h2 id=\"비밀번호-저장\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EC%A0%80%EC%9E%A5\" aria-label=\"비밀번호 저장 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비밀번호 저장</h2>\n<p>PasswordEncoder 인터페이스를 통해 패스워드 암호화를 지원함.\nPasswordEncoder 인터페이스는 안전하게 저장하기 위해 패스워드의 단방향 변환 방식을 사용함.\n추후에 로그인 시 비밀번호를 비교해야 할 때 암호화했던 비밀번호를 복호화 후 비교하는 것이 아닌 일치하는 지 여부만 알려주는 방식을 사용.</p>\n<h2 id=\"csrf-공격-보호-지원\" style=\"position:relative;\"><a href=\"#csrf-%EA%B3%B5%EA%B2%A9-%EB%B3%B4%ED%98%B8-%EC%A7%80%EC%9B%90\" aria-label=\"csrf 공격 보호 지원 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSRF 공격 보호 지원</h2>\n<h3 id=\"csrf-공격이란\" style=\"position:relative;\"><a href=\"#csrf-%EA%B3%B5%EA%B2%A9%EC%9D%B4%EB%9E%80\" aria-label=\"csrf 공격이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSRF 공격이란?</h3>\n<p>만약 이런 간단한 form에 보낼 금액, 받는 사람 계좌번호, 아이디를 입력하면 입금할 수 있는 은행 프로그램이 있을 때 요청 시 정상적으로 처리가 될 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/transfer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>amount<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>routingNumber<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>account<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Transfer<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">POST /transfer HTTP/1.1\nHost: bank.example.com\nCookie: JSESSIONID=randomid\nContent-Type: application/x-www-form-urlencoded\n\namount=100.00&amp;routingNumber=1234&amp;account=9876</code></pre></div>\n<p>그런데 만약 아래와 같이 해커가 다른 사이트에 똑같은 형식으로 요청하는 스크립트를 작성해서 다른 사람이 버튼 클릭 시 자기 계좌에 입금하도록 한다면? 게다가 이게 자동화가 되어 버튼을 누를 필요도 없다면? 큰 문제가 생길 것이다.</p>\n<p>일단 서버에서는 해당 요청에 문제가 없고, 올바른 요청인지 아닌지 알 수 없기 때문에 정상적으로 처리가 될 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://bank.example.com/transfer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>amount<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100.00<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>routingNumber<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>evilsRoutingNumber<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>account<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>evilsAccountNumber<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Win Money!<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3 id=\"스프링-시큐리티에서는-어떻게-해결했는지\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0%EC%97%90%EC%84%9C%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%95%B4%EA%B2%B0%ED%96%88%EB%8A%94%EC%A7%80\" aria-label=\"스프링 시큐리티에서는 어떻게 해결했는지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 시큐리티에서는 어떻게 해결했는지?</h3>\n<p>same-origin, 동기화 토큰 패턴 등 여러 방법이 있지만 스프링 시큐리티에서는 동기화 토큰 패턴을 사용한다. 아래처럼 서버에서 발급한 csrf토큰을 form에 삽입하여 요청 시 매개변수에 포함되도록 한다. 그래서 서버에서는 발급한 csrf토큰과 이 토큰값을 비교하여 다를 경우 요청이 실패되도록 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/transfer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n    <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_csrf<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4bfd1575-3ad1-4d21-96c7-4ef2d9f86721<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>amount<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>routingNumber<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>account<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Transfer<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">POST /transfer HTTP/1.1\nHost: bank.example.com\nCookie: JSESSIONID=randomid\nContent-Type: application/x-www-form-urlencoded\n\namount=100.00&amp;routingNumber=1234&amp;account=9876&amp;\\_csrf=4bfd1575-3ad1-4d21-96c7-4ef2d9f86721</code></pre></div>\n<h1 id=\"주요-객체\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9A%94-%EA%B0%9D%EC%B2%B4\" aria-label=\"주요 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주요 객체</h1>\n<ul>\n<li><strong>Authentication</strong> - 요청 시 입력 받은 사용자 ID, 패스워드와 같은 인증 요청 정보를 가지고 있다.</li>\n<li><strong>AuthenticationFilter</strong> - 시큐리티 관련 전처리를 위한 필터</li>\n<li><strong>AuthenticaitonManager</strong> - 사용자 비밀번호를 인증하는 역할을 담당한다.</li>\n<li><strong>AuthenticationProvider</strong> - AuthenticationManager에게 비밀번호 인증 기능을 제공한다.</li>\n<li><strong>UserDetailsService</strong> - UserDetails를 반환함</li>\n<li><strong>UserDetails</strong> - DB에서 가져온 사용자 정보(이름, 이메일, 전화번호)를 저장하기 위함.</li>\n<li><strong>SecurityContext</strong> - Authentication를 보관함</li>\n</ul>\n<h1 id=\"시큐리티-인증-흐름\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%EC%9D%B8%EC%A6%9D-%ED%9D%90%EB%A6%84\" aria-label=\"시큐리티 인증 흐름 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시큐리티 인증 흐름</h1>\n<p><img src=\"https://user-images.githubusercontent.com/45007556/91036976-37b49400-e643-11ea-809d-841e6d4befd3.png\" alt=\"image\"></p>\n<ol>\n<li><strong>UsernamePasswordAuthenticationFilter(AuthenticationFilter)</strong>는 <strong>HttpServletRequest</strong>에서 사용자가 전송한 아이디와 패스워드를 가로챈다.</li>\n<li><strong>AuthenticationFilter</strong>는 인증용 객체 <strong>Authentication</strong>을 생성한다.</li>\n<li><strong>AuthenticationFilter</strong>는 인증을 위해 <strong>AuthenticationManager</strong>에게 <strong>Authentication</strong>을 전달한다.</li>\n<li><strong>AuthenticationManager</strong>는 실제 인증 기능이 수행을 위해 <strong>AuthenticationProvider</strong>에게 다시 <strong>Authentication</strong>을 전달한다.</li>\n<li><strong>AuthenticationProvider</strong>는 <strong>UserDetailsService</strong>에게 조회할 username을 전달하여 인증을 위한 <strong>UserDetails</strong>(DB 사용자 정보) 객체를 요청한다.</li>\n<li><strong>UserDetailsService</strong>는 <strong>AuthenticationProvider</strong>에게 전달 받은 username을 통해 <strong>UserDetails</strong>(DB 사용자 정보)를 찾는다.</li>\n<li><strong>UserDetailsService</strong>는 username을 통해 찾은 <strong>UserDetails</strong>(DB 사용자 정보)를 반환한다.</li>\n<li><strong>AuthenticationProvider</strong>는 <strong>Authentication</strong>과 <strong>UserDetails</strong>를 가지고 인증을 수행하여 인증에 성공 시 <strong>Authentication</strong>을 반환한다. (반환할 <strong>Authentication</strong>에는 부여된 권한, 인증 여부가 포함됨)</li>\n<li><strong>AuthenticationManager</strong>는 <strong>AuthenticationProvider</strong>을 통해 인증에 성공할 경우 전달 <strong>AuthenticationProvider</strong>을 통해 전달받은 <strong>Authentication</strong>을 반환한다.</li>\n<li>인증이 최종적으로 완료되면 <strong>Authentication</strong>객체를 <strong>SecurityContextHolder</strong>에 담은 후 성공 시 <strong>AuthenticationSuccessHandler</strong>, 실패 시 <strong>AuthenticationFailureHandler</strong>를 실행한다.</li>\n</ol>\n<h1 id=\"스프링-시큐리티-필터-체인\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%ED%95%84%ED%84%B0-%EC%B2%B4%EC%9D%B8\" aria-label=\"스프링 시큐리티 필터 체인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 시큐리티 필터 체인</h1>\n<p><img src=\"https://user-images.githubusercontent.com/45007556/91037118-70ed0400-e643-11ea-8280-acf4aaa34245.png\" alt=\"image\">\n위에서 시큐리티 인증 흐름을 설명할 때 2번에서 form 기반 인증 흐름을 설명하기 위해 <strong>UsernamePasswordAuthenticationFilter(AuthenticationFilter)</strong>에 대해서 설명했었다. 그런데 시큐리티에서 지원하는 필터는 이것 하나만이 아니라 아래와 같은 순서로 여러 필터가 실행이 되는데 그 중 하나인 것이다. 전부 외워둘 필요는 없지만 훑어놨다가 나중에 커스텀할 일이 생겼을 때 다시 찾아보면 될 듯 하다.</p>\n<ol>\n<li><strong>WebAsyncManagerIntegrationFilter</strong> - ThreadLocal기반으로 같은 쓰레드 내에서만 SecurityContext가 공유됨. SpringSecurityContextHolder를 비동기(Async)와 관련된 기능을 쓸 때에도 SecurityContext를 사용할 수 있도록 만들어줌.</li>\n<li><strong>SecurityContextPersistenceFilter</strong> - SecurityContext가 없으면 생성하고, 있을 경우 불러오는 기능을 함.</li>\n<li><strong>HeaderWriterFilter</strong> - 응답(Response)에 Security와 관련된 헤더 값을 설정함.</li>\n<li><strong>CsrfFilter</strong> - CSRF 공격을 방어함.</li>\n<li><strong>LogoutFilter</strong> - 로그아웃 URL로 들어오는 요청을 감시하여 해당 사용자를 로그아웃 시킴.</li>\n<li><strong>UsernamePasswordAuthenticationFilter</strong> - 사용자 ID, 패스워드를 쓰는 form기반 인증을 처리함.</li>\n<li><strong>RequestCacheAwareFilter</strong> - 인증 후, 원래 Request 정보로 재구성함.</li>\n<li><strong>SecurityContextHolderAwareRequestFilter</strong> - HttpServletRequestWrapper를 상속한 SecurityContextHolderAwareRequestWapper 객체로 HttpServletRequest 정보를 감싼다. 해당 Wrapper객체는 필터 체인상의 다음 필터들에게 부가정보를 제공함.</li>\n<li><strong>AnonymousAuthenticationFilter</strong> - 이 필터에 올 때까지 앞에서 사용자 정보가 인증되지 않았다면, 해당 요청은 익명의 사용자가 보낸 것으로 판단하고 처리하고. <strong>AnonymousAuthenticationToken</strong>(<strong>Authentication</strong>)객체를 새로 생성함.</li>\n<li><strong>SessionManagementFilter</strong> - 인증된 사용자와 관련된 모든 세션을 추적함.(세션 변조 공격 방지, 유효하지 않은 세션으로 접근 시 URL 핸들링, 하나의 세션 아이디로 접속하는 세션 최대 수 설정, 세션 생성 전략 설정 등)</li>\n<li><strong>ExceptionTranslationFilter</strong> - 이전 필터들에서 인증 예외(AuthenticationException) 또는 인가 예외(AccessDeniedException)가 발생한 경우, 해당 예외를 캐치하여 처리함.</li>\n<li><strong>FilterSecurityInterceptor</strong> - 인가(Authorization)를 결정하는 AccessDecisionManager에게 접근 권한이 있는지 확인하고 처리함.</li>\n</ol>\n<h1 id=\"authentication와-userdetails\" style=\"position:relative;\"><a href=\"#authentication%EC%99%80-userdetails\" aria-label=\"authentication와 userdetails permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Authentication와 UserDetails</h1>\n<p><strong>Authentication</strong>은 사용자 요청 정보, 입력한 아이디, 비밀번호가 될 것이고,\n<strong>UserDetails</strong>는 사용자 DB 정보, DB에 저장된 아이디, 비밀번호가 될 것이다.\n그래서 모든 접근 주체는 <strong>Authentication</strong>을 생성하게 되고, 인증을 위해서는 <strong>UserDetails</strong>를 불러오게 된다.\n여기서는 중요하다고 생각한 이 두 객체의 주요 메서드에 대해서 정리해놓는다.</p>\n<h2 id=\"authentication의-메소드\" style=\"position:relative;\"><a href=\"#authentication%EC%9D%98-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"authentication의 메소드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Authentication</strong>의 메소드</h2>\n<table>\n<thead>\n<tr>\n<th align=\"center\">리턴 타입</th>\n<th align=\"center\">메소드명</th>\n<th align=\"center\">설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Collection&#x3C;? extends GrantedAuthority></td>\n<td align=\"center\">getAuthorities()</td>\n<td align=\"center\">저장소에 의해 인증된 사용자의 권한 목록을 반환</td>\n</tr>\n<tr>\n<td align=\"center\">Object</td>\n<td align=\"center\">getCredentials()</td>\n<td align=\"center\">주체의 비밀번호(꼭 비밀번호가 아닐 수도 있음)을 반환</td>\n</tr>\n<tr>\n<td align=\"center\">boolean</td>\n<td align=\"center\">isAuthenticated()</td>\n<td align=\"center\">인증 여부, AuthebnticationManager에 토큰을 제공할 지를 판단. 성공할 경우 불변의 인증 토큰을 반환</td>\n</tr>\n<tr>\n<td align=\"center\">void</td>\n<td align=\"center\">setAuthenticated(boolean isAuthenticated)</td>\n<td align=\"center\">인증 여부를 설정</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"userdetails의-메소드\" style=\"position:relative;\"><a href=\"#userdetails%EC%9D%98-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"userdetails의 메소드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>UserDetails</strong>의 메소드</h2>\n<table>\n<thead>\n<tr>\n<th>리턴 타입</th>\n<th>메소드명</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String</td>\n<td>getUsername()</td>\n<td>계정 아이디를 반환</td>\n</tr>\n<tr>\n<td>String</td>\n<td>getPassword()</td>\n<td>계정 비밀번호를 반환</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>isAccountNonExpired()</td>\n<td>계정 만료되지 않았는지를 반환</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>isAccountNonLocked()</td>\n<td>계정이 잠금 되어있지 않은 지를 반환</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>isCredentialsNonExpired()</td>\n<td>계정의 패스워드가 만료되지 않았는 지를 반환</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>isEnabled()</td>\n<td>사용 가능 계정인지를 반환</td>\n</tr>\n<tr>\n<td>Collection&#x3C;? extends GrantedAuthority></td>\n<td>getAuthorities()</td>\n<td>계정이 갖고 있는 권한 목록을 반환</td>\n</tr>\n</tbody>\n</table>\n<p>두 객체의 메소드를 살펴보면 뭔가 매칭이 되는 메소드가 보인다. 알고 쓰는 것도 좋을 것 같다.</p>\n<h1 id=\"authenticationmanager\" style=\"position:relative;\"><a href=\"#authenticationmanager\" aria-label=\"authenticationmanager permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AuthenticationManager</h1>\n<p><img src=\"https://user-images.githubusercontent.com/45007556/91037952-e3aaaf00-e644-11ea-8bdf-57e159a5ea3d.png\" alt=\"image\"></p>\n<p>인증 흐름에서 설명했듯이 이 그림과 함께 주요 흐름을 보강 설명하겠다.</p>\n<ol>\n<li>필터가 <strong>Authentication</strong>을 <strong>AuthenticationManager</strong>에 전달하여 인증 요청을 한다.</li>\n<li><strong>AuthenticationManager</strong>는 <strong>AuthenticationProvider</strong>에게 <strong>Authentication</strong>를 전달하여 다시 인증 요청을 한다.</li>\n<li><strong>AuthenticationProvider</strong>는 인증이 성공할 경우 <strong>Authentication</strong>의 멤버 변수 isAuthenticated를 true로 설정한다.</li>\n</ol>\n<h1 id=\"비밀번호-암호화-시-사용되는-passwordencoder\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EC%95%94%ED%98%B8%ED%99%94-%EC%8B%9C-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-passwordencoder\" aria-label=\"비밀번호 암호화 시 사용되는 passwordencoder permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비밀번호 암호화 시 사용되는 PasswordEncoder</h1>\n<h2 id=\"스프링-공식-홈페이지에서-설명하고-있는-passwordencoder를-사용했을-때의-장점\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EA%B3%B5%EC%8B%9D-%ED%99%88%ED%8E%98%EC%9D%B4%EC%A7%80%EC%97%90%EC%84%9C-%EC%84%A4%EB%AA%85%ED%95%98%EA%B3%A0-%EC%9E%88%EB%8A%94-passwordencoder%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%96%88%EC%9D%84-%EB%95%8C%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"스프링 공식 홈페이지에서 설명하고 있는 passwordencoder를 사용했을 때의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://docs.spring.io/spring-security/site/docs/5.1.1.RELEASE/reference/htmlsingle/#pe-dpe\">스프링 공식 홈페이지</a>에서 설명하고 있는 <strong>PasswordEncoder</strong>를 사용했을 때의 장점</h2>\n<ul>\n<li>현재 비밀번호 저장 권장 사항을 사용하여 비밀번호가 인코딩되도록 보장</li>\n<li>최신 및 레거시 형식의 비밀번호 유효성 검사 허용</li>\n<li>향후 인코딩 업그레이드 허용</li>\n</ul>\n<h2 id=\"주요-메소드\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9A%94-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"주요 메소드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주요 메소드</h2>\n<table>\n<thead>\n<tr>\n<th>리턴 타입</th>\n<th>메소드명</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String</td>\n<td>encode(CharSequence rawPassword)</td>\n<td>비밀번호를 받아 암호화된 비밀번호를 반환</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>matches(CharSequence rawPassword, String encodedPassword)</td>\n<td>비밀번호와 암호화된 비밀번호를 받아 일치 여부를 반환</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"암호화-알고리즘\" style=\"position:relative;\"><a href=\"#%EC%95%94%ED%98%B8%ED%99%94-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"암호화 알고리즘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>암호화 알고리즘</h2>\n<p><strong>PasswordEncoder</strong>는 bcrypt, noop, pbkdf2, scrypt, sha256 등 여러가지 암호화 알고리즘을 지원하여 개발할 때 사용하고 싶은 암호화 방식을 선택하여 해당하는 구현체를 쓸 수 있다.\n<img src=\"https://user-images.githubusercontent.com/45007556/91037979-ed341700-e644-11ea-9248-e09471bc4b7b.png\" alt=\"image\"></p>\n<h2 id=\"암호화-결과물\" style=\"position:relative;\"><a href=\"#%EC%95%94%ED%98%B8%ED%99%94-%EA%B2%B0%EA%B3%BC%EB%AC%BC\" aria-label=\"암호화 결과물 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>암호화 결과물</h2>\n<p>encode 메소드를 통해 비밀번호를 암호화를 해서 반환 받은 문자열을 살펴보면 아래와 같이 앞에 접두사로 {암호화 방식}이 붙는다. bcrypt로 암호화를 했기 때문에 {bcrypt}가 붙었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{bcrypt}$2a$10\\$g1PWM7YhvhhA3PUtnSh.mOZVQFQe7fTO0C2na2Xpbrit.bwYlQdPe</code></pre></div>\n<h1 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h1>\n<p><a href=\"https://jeong-pro.tistory.com/205\">https://jeong-pro.tistory.com/205</a><br>\n<a href=\"https://springsource.tistory.com/80\">https://springsource.tistory.com/80</a><br>\n<a href=\"https://coding-start.tistory.com/153\">https://coding-start.tistory.com/153</a></p>","frontmatter":{"title":"스프링 시큐리티 정리","date":"August 06, 2020"}}},"pageContext":{"slug":"/2020/2020-08-06-Spring Security/","previous":{"fields":{"slug":"/2020/2020-07-18-Spring Boot-Validations/"},"frontmatter":{"title":"스프링 부트 유효성 검증(Validation)을 커스텀하여 여러가지 항목에 대해 상호 검증하기","category":"Spring","draft":false}},"next":{"fields":{"slug":"/2020/2020-08-06-Spring Boot-Swagger/"},"frontmatter":{"title":"스프링 부트 스웨거(Swagger)를 이용하여 REST API문서 자동화하기","category":"Spring","draft":false}}}},"staticQueryHashes":["3128451518","521680639"]}